%TRABAJO PRACTICO N° 1
% Profesor: Julian Pucheta
% Alumno: Gallone Claudio Francesco
% Caso de estudio 2
% Ejercicio 5
% Sistema de 3 variables de estado

clear all; clc; close all;

values = xlsread("Curvas_Medidas_Motor_2025_v.xls");
t = values(1:end,1);
w = values(1:end,2);
i_a = values(1:end,3);
va = values(1:end,4);
T_l = values(1:end,5);
Vin = 2;

%gráfico de la velocidad angular
figure(1)
subplot(4,1,1)
plot(t,w,"m");
title ("Velocidad angular según Tabla (rad/s"); grid on; hold on;

subplot(4,1,2)
plot(t,i_a,"r");
title ("Corriente de armadura según Tabla (A)"); grid on; hold on;

subplot(4,1,3)
plot(t,va,"b");
title ("Tensión de entrada según Tabla (V)"); grid on; hold on;

subplot(4,1,4)
plot(t,T_l,"g");
title ("Torque según Tabla (Nm)"); grid on; hold on;

%METODO DE CHEN
% ELIJO 3 PUNTOS EQUISDISTANTES SEGUN LA GRAFICA DE LA VELOCIDAD ANGULAR
%CUMPLIENDO CONDICIONES NULAS y MAXIMA VARIACION



%normalizo valores
k = w(end)/Vin;
y1 = w(110)/2;
t1 = t(110); %t1

y2 = w(120)/2;
t2 = t(120); %t2

y3 = w(130)/2;
t3 = t(130); %t3

% Tiempo entre muestras
ts = t2 - t1;

k1 = (y1/k)-1;
k2 = (y2/k)-1;
k3 = (y3/k)-1;

b=((4)*(k1^3)*(k3))-((3)*(k1^2)*(k2^2))-((4)*(k2^3))+(k3^2)+((6)*(k1)*(k2)*(k3));

% 6: Cálculo de alfas 
alfa1 = ((k1*k2)+(k3)-(sqrt(b)))/(2*((k1^2)+(k2))); 
alfa2 = ((k1*k2)+(k3)+(sqrt(b)))/(2*((k1^2)+(k2))); 

% 7: Cálculo de beta 
Beta=(k1+alfa2)/(alfa1-alfa2); 

%Calculo la constante de tiempo T1:
T1      =       (-ts/log(alfa1));

%Calculo la constante de tiempo T2:
T2      =       (-ts/log(alfa2));

%Calculo la constante de tiempo T3:
T3= (Beta*(T1-T2))+(T1)

% Función de transferencia calculada por el método de CHEN 
G_wv = tf(k,conv([T1 1],[T2 1])) %funcion de transferencia W/Va

Ki = 0.2769;
J  = 0.0028;
B = 0;                         % se lo puede aproximar a 0
Laa = 0.0055;
Ra = 2.4136;
Km = 0.2625;


% Armo las matrices del espacio de estados según las ecuaciones de estado
% y la ecuación de salida:

% Definir las matrices del espacio de estados
A = [-Ra/Laa, -Km/Laa, 0; 
     Ki/J, -B/J, 0; 
     0, 1, 0]; % A definir según tus parámetros

B = [1/Laa, 0; 
     0, -1/J; 
     0, 0];  % A definir según tus parámetros

C = [0, 1, 0]; % Salida correspondiente a la velocidad angular (w)
D = [0, 0];    % Sin componente directa

% Parámetros de simulación y muestreo
t_sim = 1.5; % Tiempo de simulación en segundos
t_muestreo = 1e-5; % Tiempo de muestreo
num_puntos = round(t_sim / t_muestreo) + 1;

% Inicializamos los vectores para la simulación
t2 = linspace(0, t_sim, num_puntos);
u = zeros(1, num_puntos);    % Entrada de voltaje (Vin)
TL = zeros(1, num_puntos);   % Torque de carga (T_l)
Ia = zeros(1, num_puntos);   % Corriente de armadura (i_a)
Wr = zeros(1, num_puntos);   % Velocidad angular (w)
Tita = zeros(1, num_puntos); % Variable adicional si se necesita

% Definir el vector de estados iniciales
x = [0 0 0]';  % Condiciones iniciales ( [i_a, w, theta] )

x0 = [0 0 0]'; % Punto de operación (en este caso, inicialmente cero)

% Le damos valores a la salida y las variables de estado en cada punto
for i = 1:(t_sim / t_muestreo) - 1
    % Definición de la entrada de voltaje y torque de carga
    if(t2(i) > 0.1)
        u(i) = 2;  % Voltaje de entrada (Vin)
    end

    if(t2(i) > 0.7)
        TL(i) = 0.12;  % Torque de carga
    end

    if(t2(i) > 1)
        TL(i) = 0;   % Cambio en el torque de carga después de 1 segundo
    end

    % Ecuaciones de estado y de salida
    % Aquí se actualiza el vector de estados usando la ecuación de espacio de estados
    x_punto = A * (x - x0) + B * [u(i); TL(i)];  % Derivadas de las variables de estado
    x = x + x_punto * t_muestreo;  % Integración de Euler

    % Salida del sistema (velocidad angular en este caso)
    y = C * x;

    % Guardamos las salidas y las variables de estado
    Wr(i + 1) = y;          % Velocidad angular
    Ia(i + 1) = x(1);       % Corriente de armadura (i_a)
    Tita(i + 1) = x(3);     % Variable adicional (si la necesitas)
end

% Finalmente, graficamos las entradas, salidas y variables de estado
figure(1);
subplot(4,1,1);
plot(t2, Wr, '--g', 'LineWidth', 2);
legend('CHEN - - - - -');
title('Velocidad Angular');
xlabel('Tiempo (s)');
ylabel('Velocidad angular (rad/s)');
grid on;

subplot(4,1,2);
plot(t2, Ia, '--g', 'LineWidth', 2);
legend('CHEN - - - - -');
title('Corriente en la Armadura');
xlabel('Tiempo (s)');
ylabel('Corriente (A)');
grid on;

subplot(4,1,3);
plot(t2, u, '--r', 'LineWidth', 2);
legend('CHEN - - - - -');
title('Tensión de Entrada');
xlabel('Tiempo (s)');
ylabel('Voltaje (V)');
grid on;

subplot(4,1,4);
plot(t2, TL, '--r', 'LineWidth', 2);
legend('CHEN - - - - -');
title('Torque de Carga');
ylabel('Torque (N.m)');
xlabel('Tiempo (s)');
grid on;
